name: Release

on:
  push:
    tags:
      - v0.[0-9]+.[0-9]+

env:
  CARGO_TERM_COLOR: always

jobs:
  validate:
    strategy:
      matrix:
        dimensions: [2d, 3d, all]
        toolchain: [stable, nightly]
        os: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-build-${{ matrix.dimensions }}-${{ matrix.toolchain }}-${{ hashFiles('**/Cargo.toml') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          components: rustfmt, clippy
          override: true
      - name: Cargo format
        run: cargo fmt --all --check
        env:
          CARGO_INCREMENTAL: 0
      - name: Cargo clippy
        run: cargo clippy --workspace --all-targets --all-features -- -D warnings
        if: matrix.dimensions == 'all'
      - name: Cargo clippy
        run: cargo clippy --workspace --all-targets --no-default-features --features="${{ matrix.dimensions }}" -- -D warnings
        if: matrix.dimensions != 'all'
      - name: Cargo doc
        run: cargo doc --no-deps --all-features
      - name: Install Bevy dependencies
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev libxcb-shape0-dev libxcb-xfixes0-dev
        if: runner.os == 'linux'
      - name: Install graphic drivers
        run: |
          sudo apt-get update -y -qq
          sudo add-apt-repository ppa:oibaf/graphics-drivers -y
          sudo apt-get update
          sudo apt install -y xvfb libegl1-mesa libgl1-mesa-dri libxcb-xfixes0-dev mesa-vulkan-drivers
        if: runner.os == 'linux'
      - name: Build & run tests
        run: cargo test --no-default-features --features ${{ matrix.dimensions }}
        env:
          CARGO_INCREMENTAL: 0
        if: matrix.dimensions != 'all'
      - name: Build & run GPU tests
        run: cargo test --no-default-features --features ${{ matrix.dimensions }} --features gpu_tests
        env:
          CARGO_INCREMENTAL: 0
        if: runner.os == 'linux' && matrix.dimensions != 'all'
      - name: Build & run tests
        run: cargo test --no-default-features --features="2d 3d"
        env:
          CARGO_INCREMENTAL: 0
        if: matrix.dimensions == 'all'
